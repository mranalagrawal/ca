#import "~/graphql/fragments/mailingAddress.graphql"

query getCustomerOrders(
  $customerAccessToken: String!,
  $lang: LanguageCode!,
  $query: String = "processed_at:>2020-01-01"
) @inContext(language: $lang) {
  customer(customerAccessToken: $customerAccessToken) {
    id
    firstName
    orders(first: 30, reverse: true, query: $query) {
      nodes {
        billingAddress {
          ...MAILING_ADDRESS
        }
        cancelReason,
        canceledAt,
        currencyCode
        currentSubtotalPrice { amount, currencyCode }
        currentTotalDuties { amount, currencyCode }
        currentTotalPrice { amount, currencyCode }
        currentTotalTax { amount, currencyCode }
        financialStatus
        fulfillmentStatus
        id
        name
        orderNumber
        processedAt
        statusUrl
        subtotalPrice { amount, currencyCode }
        totalPrice { amount, currencyCode }
        totalShippingPrice { amount, currencyCode }
        shippingAddress {
          ...MAILING_ADDRESS
        }
        successfulFulfillments(first: 1) {
          trackingCompany
          trackingInfo {
            number,
            url
          }
        }
        eventStatus: metafield(namespace: "fulfillment", key: "event_status") { value }
        sourceTrackingNumber: metafield(namespace: "logistic", key: "source_tracking_number") { value }
        lineItems(first: 250) {
          nodes {
            quantity
            title
            originalTotalPrice {
              amount
              currencyCode
            }
            discountedTotalPrice {
              amount
              currencyCode
            }
            variant {
              availableForSale
              compareAtPrice { amount, currencyCode }
              id
              price { amount, currencyCode }
              compareAtPrice { amount, currencyCode }
              image { altText, height, url, width }
              sku
              quantityAvailable
              metafield: metafield(namespace: "custom", key: "details") {
                value
              }
              product {
                availableForSale
                descriptionHtml
                handle
                id
                isGiftCard
                featuredImage { altText, height, url, width }
                seo { description, title }
                tags
                title
                vendor
                totalInventory
                breadcrumbs: metafield(namespace: "custom", key: "breadcrumbs") { value }
                bundle: metafield(namespace: "custom", key: "bundle") { value }
                details: metafield(namespace: "custom", key: "details") { value }
                priceLists: metafield(namespace: "prices", key: "price_lists") { value }
                variants(first: 1) {
                  nodes {
                    id
                    compareAtPrice { amount, currencyCode }
                    price { amount, currencyCode }
                    quantityAvailable
                    sku
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
